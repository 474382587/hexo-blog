[{"title":"Binary Search","date":"2018-09-13T22:17:34.000Z","path":"2018/09/13/Binary-Search/","text":"Binary SearchBinary Search 的前提条件是 1. 有序 2. 数组满足以后，即可取中间值判断与目标值是否相等， 如不相等，再取中间值对比，此时中间值为 prev中间值和最低值、最高值 中间的值 mid = (mid + high)/2mid = (low + mid)/2 Time: O(logN) 1234567891011121314function binarySearch(target,arr,start,end) &#123; var start = start || 0; var end = end || arr.length-1; var mid = parseInt(start+(end-start)/2); if(target==arr[mid])&#123; return mid; &#125;else if(target&gt;arr[mid])&#123; return binarySearch(target,arr,mid+1,end); &#125;else&#123; return binarySearch(target,arr,start,mid-1); &#125; return -1;&#125; 12345678910111213141516function binarySearch(target,arr) &#123; var start = 0; var end = arr.length-1; while (start&lt;=end)&#123; var mid = parseInt(start+(end-start)/2); if(target==arr[mid])&#123; return mid; &#125;else if(target&gt;arr[mid])&#123; start = mid+1; &#125;else&#123; end = mid-1; &#125; &#125; return -1;&#125;","tags":[]},{"title":"Mouse Event","date":"2018-09-01T22:44:34.000Z","path":"2018/09/01/mouse events/","text":"MouseEvent click: mouse click dbclick: mouse double click on an element mousedown: button is pressed on an element mouseup: triggers when button released mousemove: mouse move on an element mouseenter: mouse enters an element area mouseover: over an element mouseout: out an element mouseleave: leaveds an element contextmenu: right button click wheel: scroll button click –&gt; mousedown -&gt; mouseup -&gt; click this is the sequencedblclick –&gt; mousedown -&gt; mouseup -&gt; click -&gt; dbclick mouseover and mouseenter difference: mouseenter trigers once while mouseover trigers multiple times","tags":[]},{"title":"Scope in Vue","date":"2018-08-12T17:11:54.000Z","path":"2018/08/12/scoped in Vue/","text":"If you want to use scoped in .vue file and you import a third party component such as ElementUI and you wanna modify the style of itThis is what you need to do:123456&lt;style lang=\"less\" scoped&gt;.banner /deep/ .el-button &#123; ...&#125;&lt;/style&gt; use /deep/ to penetrate the scoped, you may see someone using &gt;&gt;&gt; to achieve the same goal.However, if you are using less, you are not able to use this directly. You will need to use it this way ~&quot;&gt;&gt;&gt;&quot;, which is not what I like to do","tags":[]},{"title":"Regular Expression","date":"2018-08-12T04:33:21.000Z","path":"2018/08/11/Regular Expression/","text":"Regex Regular expressions are used in programming languages to match parts of strings. One way to test a regex is using the .test() method.The test() method executes a search for a match between a regular expression and a specified string. Returns true or false.123456789101112131415var regex1 = RegExp('foo*');var regex2 = RegExp('foo*','g');var str1 = 'table football';console.log(regex1.test(str1));// expected output: trueconsole.log(regex1.test(str1));// expected output: trueconsole.log(regex2.test(str1));// expected output: trueconsole.log(regex2.test(str1));// expected output: false It is Case sensitive –&gt; /big/ is not equavalent to /Big/ or /BIG/ You can search for multiple patterns using the alternation or OR operator: |. Ignore Case: use i flag to make it not case sensitive /big/i for big, Big, BIG Extract Matches: .match() method –&gt; match exact REGEX and extract paragraph 12345var regex = /[A-Z]/g;var found = paragraph.match(regex);console.log(found);// expected output: Array [&quot;T&quot;, &quot;I&quot;] To search or extract a pattern more than once, you can use the g flag. The wildcard character . will match any one character. The wildcard is also called dot and period /re./ –&gt; reg, ref, reh … Match Single Character with Multiple Possibilities –&gt; For example, you want to match “bag”, “big”, and “bug” but not “bog”. You can create the regex /b[aiu]g/ to do this. The [aiu] is the character class that will only match the characters “a”, “i”, or “u”. [a-z] – [0-9] – [A-Z] these are character classes To create a negated character set, you place a caret character (^) after the opening bracket and before the characters you do not want to match. –&gt; [^0-9] Use the + character to finding repeating –&gt; /[0-9]+/, /a+/ + means 1 or more * means 0 or more","tags":[]},{"title":"CSS white-space","date":"2018-06-03T22:00:34.000Z","path":"2018/06/03/CSS_ white-space/","text":"white-space/ Keyword values /white-space: normal;white-space: nowrap;white-space: pre;white-space: pre-wrap;white-space: pre-line; / Global values /white-space: inherit;white-space: initial;white-space: unset; normalSequences of whitespace are collapsed. Newline characters in the source are handled the same as other whitespace. Lines are broken as necessary to fill line boxes. nowrapCollapses whitespace as for normal, but suppresses line breaks (text wrapping) within the source. preSequences of whitespace are preserved. Lines are only broken at newline characters in the source and at elements. pre-wrapSequences of whitespace are preserved. Lines are broken at newline characters, at , and as necessary to fill line boxes. pre-lineSequences of whitespace are collapsed. Lines are broken at newline characters, at , and as necessary to fill line boxes. There are some cases that you will need to use nowrap: Navigation menu itemsIf the screen size is getting smaller and the width for each navigation link text is not enough to show all word in a single line When you want to have “…”For example: 123 overflow: hidden;white-space: nowrap;text-overflow: ellipsis; Reference: https://developer.mozilla.org/en-US/docs/Web/CSS/white-space","tags":[]},{"title":"Extract Text Webpack Plugin","date":"2018-05-23T18:12:01.000Z","path":"2018/05/23/Extract Text Webpack Plugin/","text":"Use this plugin to extract CSS file from compiled js file. (Production)Or use style-loader for Dev environment 1234567891011const env = process.env.NODE_ENV || 'development'...&#123; test: /\\.(scss|css)$/, use: env === 'production' ? extractSASS.extract(&#123; fallback: 'style-loader', use: ['css-loader','sass-loader'] &#125;) : [ 'style-loader', 'css-loader', 'sass-loader' ]&#125;","tags":[]},{"title":"Object Methods","date":"2018-05-13T22:17:34.000Z","path":"2018/05/13/Object method/","text":"12345678910111213// OBJvar A = &#123; print: function () &#123; console.log('hello'); &#125;&#125;;// OBJvar B = Object.create(A);Object.getPrototypeOf(B) === A // trueB.print() // helloB.print === A.print // true","tags":[]},{"title":"Placeholder Images","date":"2018-04-23T05:12:34.000Z","path":"2018/04/22/Placeholder Images/","text":"Here is a useful website I have discovered onlinehttps://picsum.photos/ You are able to their placeholder images as simple as –&gt; https://picsum.photos/200/300 where 200 is the width and 300 is the heightIf you wish to use a square image –&gt; https://picsum.photos/200 will do the trickEven more, you can add searching params “?random” to the end to get random placeholder images :)","tags":[]},{"title":"Array Methods","date":"2018-04-20T02:18:34.000Z","path":"2018/04/19/JavaScript Array Methods_ Mutating vs. Non-Mutating/","text":"I. Add: Mutating array.push() adds an item to the end of the array array.unshift() adds an item to the beginning of the array. II. Add: Non-Mutating array.concat() spread operator III. Remove: Mutating array.pop() removes an item at the end of the array array.shift() removes an item at the beginning of the array. array.splice() for removing items from an array. IV. Remove: Non-Mutating array.filter() method creates a new array from an original array, but the new array only contains items that match the specified criteria array.slice() V. Replace: Mutating array.splice() VI. Replace: Non-Mutating array.map()","tags":[]},{"title":"Live Server","date":"2018-03-11T22:11:24.000Z","path":"2018/03/11/Live Server/","text":"Live ServerA Live Server Launches a development local Server with live reload feature for static &amp; dynamic pages.It allows Hot Reloading and you will not need to ctrl + S –&gt; ctrl + tab then F5 About: https://www.npmjs.com/package/live-server How to Install &amp; Use Use npm: npm install -g live-server Use yarn: yarn global add live-server cmd: “live-server [folder name]” VS Code: Extension –&gt; search for “Live Server” –&gt; You will see it on top of everything else.Use it in VS Code is easy –&gt; Ctrl + L then Ctrl + O –&gt; boom!","tags":[]},{"title":"Copy Array","date":"2018-02-11T23:17:34.000Z","path":"2018/02/11/Copy Array/","text":"var copyArr = arr.slice(0) var copyArr = [].concat(arr) var copyArr = arr.map(e =&gt; e)","tags":[]},{"title":"Colorful Console","date":"2018-01-13T23:17:34.000Z","path":"2018/01/13/Colorful Console/","text":"Colorful ConsoleSimple! –&gt;console.log(&quot;%c + text you wanna enter&quot;,&quot;style you wanna apply&quot;) Reference: https://coderwall.com/p/fskzdw/colorful-console-log","tags":[]}]