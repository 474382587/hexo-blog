[{"title":"Binary Search","date":"2018-09-13T22:17:34.000Z","path":"2018/09/13/Binary-Search/","text":"Binary SearchBinary Search 的前提条件是 1. 有序 2. 数组满足以后，即可取中间值判断与目标值是否相等， 如不相等，再取中间值对比，此时中间值为 prev中间值和最低值、最高值 中间的值 mid = (mid + high)/2mid = (low + mid)/2 Time: O(logN) 1234567891011121314function binarySearch(target,arr,start,end) &#123; var start = start || 0; var end = end || arr.length-1; var mid = parseInt(start+(end-start)/2); if(target==arr[mid])&#123; return mid; &#125;else if(target&gt;arr[mid])&#123; return binarySearch(target,arr,mid+1,end); &#125;else&#123; return binarySearch(target,arr,start,mid-1); &#125; return -1;&#125; 12345678910111213141516function binarySearch(target,arr) &#123; var start = 0; var end = arr.length-1; while (start&lt;=end)&#123; var mid = parseInt(start+(end-start)/2); if(target==arr[mid])&#123; return mid; &#125;else if(target&gt;arr[mid])&#123; start = mid+1; &#125;else&#123; end = mid-1; &#125; &#125; return -1;&#125;","tags":[]}]